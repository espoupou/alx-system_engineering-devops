#!/usr/bin/env bash
# configure web-02 to be identical to web-01
 # Updating Packages before performing installations
sudo apt-get update
sudo apt-get install -y nginx

# Configuring the Uncomplicated Firewall (UFW) to allow incoming traffic for the Nginx HTTP service
sudo ufw allow 'Nginx HTTP'

# Creating an index.html page
echo "Hello World!" | sudo tee /var/www/html/index.html

# Performing a 301 Redirection
sed -i "s/server_name _;/server_name _;\n\trewrite ^\/redirect_me https:\/\/www.youtube.com\/watch?v=QH2-TGUlwu4 permanent;/" /etc/nginx/sites-available/default

new_config=\
"server {
        listen 80 default_server;
        listen [::]:80 default_server;
               root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name _;
        location / {
                try_files \$uri \$uri/ =404;
        }
        error_page 404 /404.html;
        location  /404.html {
            internal;
        }
        
        if (\$request_filename ~ redirect_me){
            rewrite ^ https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;
        }
}
"
sudo echo "Ceci n'est pas une page
" > /var/www/html/404.html
sudo echo "$new_config" > /etc/nginx/sites-available/default

# Creating an HTTP response header
sudo sed -i "/server_name _/a add_header X-Served-By $HOSTNAME;" /etc/nginx/sites-enabled/default
sudo sed -i "/server_name _/a add_header X-Served-By $HOSTNAME;" /etc/nginx/sites-available/default

# Testing configurations for syntax errors
sudo nginx -t

# Restart nginx after implementing changes
pgrep nginx > /dev/null
if [ "$(echo $?)" -le 0 ];
then
    sudo service nginx start
else
    sudo service nginx restart
fi;
